buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'org.spongepowered.mixin'

group = 'mfrf'
version = '1.0-SNAPSHOT'

java {
    archivesBaseName = 'sunken_world'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    mappings channel: 'parchment', version: '2022.06.05-1.18.2'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')


    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'sunken_world'

            mods {
                sunken_world {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'sunken_world'

            mods {
                sunken_world {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'sunken_world'

            mods {
                sunken_world {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'sunken_world', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')


            mods {
                sunken_world {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "sunken_world.refmap.json"
    config "sunken_world.mixins.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url = "https://maven.theillusivec4.top/" }
    maven {
        name "Modding Legacy Maven"
        url "https://maven.moddinglegacy.com/artifactory/modding-legacy/"
    }
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }

}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.1.0'

    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.18.2-5.0.7.0:api")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.18.2-5.0.7.0")
    implementation fg.deobf("com.github.glitchfiend:TerraBlender-forge:1.18.2-${terrablender_version}")
    implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.18:3.0.28')

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "sunken_world",
                //"Specification-Vendor": "sunken_world authors",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                //"Implementation-Vendor": "sunken_world authors",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')
